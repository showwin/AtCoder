#!/usr/bin/env python3
import sys


def get_min_koubai(a, b):
    if a > b:
        tmp = b
        b = a
        a = tmp

    x = a * b
    r = a % b
    while r != 0:
        a = b
        b = r
        r = a % b

    return x // b


def solve(A: int, B: int, C: int, D: int):
    # Bまでの間で
    #  Cで割り切れる物の数
    #  + Dで割り切れるもののかず
    #  - CDの最小公倍数で割り切れる物の数
    min_koubai = get_min_koubai(C, D)
    b1 = B // C
    b2 = B // D
    b3 = B // min_koubai
    b_count = b1 + b2 - b3

    # Aまでの間で
    #  同上
    a1 = (A - 1) // C
    a2 = (A - 1) // D
    a3 = (A - 1) // min_koubai
    a_count = a1 + a2 - a3

    # Bの数 - Aの数
    # B - A - 上の数
    print(B - (A - 1) - (b_count - a_count))
    return


# Generated by 1.1.5 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(A, B, C, D)

if __name__ == '__main__':
    main()
